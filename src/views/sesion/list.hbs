<style>
<style>
    body {
        color: #566787;
        background: #f5f5f5;
        font-family: 'Varela Round', sans-serif; /* Añadido para consistencia de fuente */
    }

    .table-responsive {
        margin: 30px 0;
        overflow-x: auto;
    }

    .table-wrapper {
        background: #fff;
        padding: 20px 25px;
        border-radius: 3px;
        box-shadow: 0 1px 1px rgba(0,0,0,.05);
        overflow: hidden; /* Añadido para evitar desbordamiento de contenido */
    }

    .table-title {
        padding-bottom: 15px;
        background: #435d7d;
        color: #fff;
        padding: 16px 30px;
        min-width: 100%;
        margin: -20px -25px 10px;
        border-radius: 3px 3px 0 0;
    }

    .table-title h2 {
        margin: 5px 0 10px; /* Aumenta el espacio arriba y abajo del título */
        font-size: 24px;
    }

        .table-responsive {
        margin: 30px 0;
    }

    .table-wrapper {
        background: #fff;
        padding: 20px 25px;
        border-radius: 3px;
        min-width: 1000px;
        box-shadow: 0 1px 1px rgba(0,0,0,.05);
    }

    select#paciente {
        margin-top: 10px; /* Ajusta el margen superior del select */
        margin-bottom: 10px; /* Ajusta el margen inferior del select */
    }

    .table-title .btn-group {
        float: right;
    }

    .table-title .btn {
        color: #fff;
        float: right;
        font-size: 13px;
        border: none;
        min-width: 50px;
        border-radius: 2px;
        outline: none !important;
        margin-left: 10px;
    }

    .table-title .btn i {
        float: left;
        font-size: 21px;
        margin-right: 5px;
    }

    .table-title .btn span {
        float: left;
        margin-top: 2px;
    }

    table.table {
        width: 100%;
        border-collapse: collapse;
        font-size: 13px;
    }

    table.table th,
    table.table td {
        border-color: #e9e9e9;
        padding: 12px 15px;
        vertical-align: middle;
        text-align: center; /* Alineación central del texto */
    }

    table.table th:first-child,
    table.table td:first-child {
        width: 60px;
    }

    table.table th:last-child,
    table.table td:last-child {
        width: 100px;
        text-align: center;
    }

    table.table-striped tbody tr:nth-of-type(odd) {
        background-color: #fcfcfc;
    }

    table.table-striped.table-hover tbody tr:hover {
        background: #f5f5f5;
    }

    table.table th i {
        font-size: 13px;
        margin: 0 5px;
        cursor: pointer;
    }

    table.table td:last-child i {
        opacity: 0.9;
        font-size: 22px;
        margin: 0 5px;
    }

    table.table td a {
        font-weight: bold;
        color: #566787;
        display: inline-block;
        text-decoration: none;
        outline: none !important;
    }

    table.table td a:hover {
        color: #2196F3;
    }

    table.table td a.edit {
        color: #FFC107;
    }

    table.table td a.delete {
        color: #F44336;
    }

    table.table td i {
        font-size: 19px;
    }

    table.table .avatar {
        border-radius: 50%;
        vertical-align: middle;
        margin-right: 10px;
    }

    .pagination {
        float: right;
        margin: 0 0 5px;
    }

    .pagination li a {
        border: none;
        font-size: 13px;
        min-width: 30px;
        min-height: 30px;
        color: #999;
        margin: 0 2px;
        line-height: 30px;
        border-radius: 2px !important;
        text-align: center;
        padding: 0 6px;
    }

    .pagination li a:hover {
        color: #666;
    }

    .pagination li.active a,
    .pagination li.active a.page-link {
        background: #03A9F4;
    }

    .pagination li.active a:hover {
        background: #0397d6;
    }

    .pagination li.disabled i {
        color: #ccc;
    }

    .pagination li i {
        font-size: 16px;
        padding-top: 6px;
    }

    .hint-text {
        float: left;
        margin-top: 10px;
        font-size: 13px;
    }

    /* Custom checkbox */
    .custom-checkbox {
        position: relative;
    }

    .custom-checkbox input[type="checkbox"] {
        opacity: 0;
        position: absolute;
        margin: 5px 0 0 3px;
        z-index: 9;
    }

    .custom-checkbox label:before {
        width: 18px;
        height: 18px;
    }

    .custom-checkbox label:before {
        content: '';
        margin-right: 10px;
        display: inline-block;
        vertical-align: text-top;
        background: white;
        border: 1px solid #bbb;
        border-radius: 2px;
        box-sizing: border-box;
        z-index: 2;
    }

    .custom-checkbox input[type="checkbox"]:checked + label:after {
        content: '';
        position: absolute;
        left: 6px;
        top: 3px;
        width: 6px;
        height: 11px;
        border: solid #000;
        border-width: 0 3px 3px 0;
        transform: inherit;
        z-index: 3;
        transform: rotateZ(45deg);
    }

    .custom-checkbox input[type="checkbox"]:checked + label:before {
        border-color: #03A9F4;
        background: #03A9F4;
    }

    .custom-checkbox input[type="checkbox"]:checked + label:after {
        border-color: #fff;
    }

    .custom-checkbox input[type="checkbox"]:disabled + label:before {
        color: #b8b8b8;
        cursor: auto;
        box-shadow: none;
        background: #ddd;
    }

    /* Modal styles */
    .modal .modal-dialog {
        max-width: 400px;
    }

    .modal .modal-header,
    .modal .modal-body,
    .modal .modal-footer {
        padding: 20px 30px;
    }

    .modal .modal-content {
        border-radius: 3px;
        font-size: 14px;
    }

    .modal .modal-footer {
        background: #ecf0f1;
        border-radius: 0 0 3px 3px;
    }

    .modal .modal-title {
        display: inline-block;
    }

    .modal .form-control {
        border-radius: 2px;
        box-shadow: none;
        border-color: #dddddd;
    }

    .modal textarea.form-control {
        resize: vertical;
    }

    .modal .btn {
        border-radius: 2px;
        min-width: 100px;
    }

    .modal form label {
        font-weight: normal;
    }
</style>
	
</style>
<script>
$(document).ready(function(){
	// Activate tooltip
	$('[data-toggle="tooltip"]').tooltip();
	
	// Select/Deselect checkboxes
	var checkbox = $('table tbody input[type="checkbox"]');
	$("#selectAll").click(function(){
		if(this.checked){
			checkbox.each(function(){
				this.checked = true;                        
			});
		} else{
			checkbox.each(function(){
				this.checked = false;                        
			});
		} 
	});
	checkbox.click(function(){
		if(!this.checked){
			$("#selectAll").prop("checked", false);
		}
	});

	// Formatear fechas de nacimiento
    $('.fecha-nacimiento').each(function(){
        var fecha = new Date($(this).text());
        var dia = fecha.getDate();
        var mes = fecha.getMonth() + 1; // Los meses son base 0 en JavaScript, así que sumamos 1
        var año = fecha.getFullYear();
        var fechaFormateada = (dia < 10 ? '0' : '') + dia + '/' + (mes < 10 ? '0' : '') + mes + '/' + año;
        $(this).text(fechaFormateada);
    });
});
</script>
</head>
<body>
<div class="container-xl">
	<div class="table-responsive">
		<div class="table-wrapper">
			<div class="table-title">
				<div class="row">
					<div class="col-sm-6">
						<h2>Listado <b>sesiones por paciente</b></h2>
					</div>
					<div class="col-sm-6" hidden>
						<a href="/pacientes/add/" class="btn btn-success" ><i class="material-icons">&#xE147;</i> <span>Nuevo Paciente</span></a>
						<a href="/pacientes/delete/{{PK_Paciente}}" class="btn btn-danger"><i class="material-icons">&#xE15C;</i> <span>Borrar</span></a>						
					</div>
				</div>
			</div>
			<table class="table table-striped table-hover">
				<thead>
					<tr>
                    <select name="paciente" id="paciente" class="form-control custom-select" autofocus required>
                        <option value="">Seleccione un paciente</option>
                        {{#each pacientes}}
                        <option value="{{PK_Paciente}}">{{apellido}}, {{nombre}}</option>
                        {{else}}
                        <option value="">No hay pacientes</option>
                        {{/each}}
                    </select>
                </tr>
                <tr>
                
						<th hidden>
							<span class="custom-checkbox">
								<input type="checkbox" id="selectAll">
								<label for="selectAll"></label>
							</span>
						</th>
						<th>Nº</th>
						<th>Fecha de activación</th>
						<th>Repeticiones</th>
						<th>Fecha de realización</th>
						<th>Cant. de ejercicios</th>
                     	<th>Ejercicio</th>
                        <th>Repeticiones</th>
					</tr>
				</thead>
				<tbody>
				</tbody>
			</table>
		</div>
	</div>        
</div>
</body>


<script>
    document.addEventListener("DOMContentLoaded", function() {
    document.getElementById("paciente").addEventListener("change", function() {
        var pacienteId = this.value;
        if (pacienteId) {
            fetch(`/sesion/list?pacienteId=${pacienteId}`)
                .then(response => response.json())
                .then(data => {
                    var tableBody = document.querySelector("table tbody");
                    tableBody.innerHTML = "";

                    if (data.length > 0) {
                        // Agrupar las sesiones por PK_Sesion
                        var sesiones = {};
                        data.forEach(item => {
                            if (!sesiones[item.PK_Sesion]) {
                                sesiones[item.PK_Sesion] = {
                                    nroSesion: item.nroSesion,
                                    fechaActivacion: new Date(item.fechaActivacion).toLocaleDateString('es-ES'),
                                    repeticiones: item.repeticiones,
                                    fechaRealizacion: item.fechaRealizacion ? new Date(item.fechaRealizacion).toLocaleDateString('es-ES') : "No realizada",
                                    cantEjercicios: item.cantEjercicios,
                                    ejercicios: [],
                                    repeticionesxEjercicio: []
                                };
                            }
                            sesiones[item.PK_Sesion].ejercicios.push(item.ejercicio);
                            sesiones[item.PK_Sesion].repeticionesxEjercicio.push(item.repeticionesxEjercicio);
                        });

                        // Crear las filas de la tabla
                        Object.keys(sesiones).forEach(key => {
                            var sesion = sesiones[key];
                            var row = document.createElement("tr");

                            // Construir la lista de ejercicios y repeticiones
                            var ejerciciosHTML = sesion.ejercicios.map((ejercicio, index) => {
                                return `${ejercicio}<br>`;
                            }).join("");
                            
                            var repeticionesHTML = sesion.repeticionesxEjercicio.map((repeticiones, index) => {
                                return `${repeticiones}<br>`;
                            }).join("");

                            row.innerHTML = `
                                <td hidden>
                                    <span class="custom-checkbox">
                                        <input type="checkbox" id="checkbox1" name="idPaciente" value="${key}">
                                        <label for="checkbox1"></label>
                                    </span>
                                </td>
                                <td>${sesion.nroSesion}</td>
                                <td>${sesion.fechaActivacion}</td>
                                <td>${sesion.repeticiones}</td>
                                <td>${sesion.fechaRealizacion}</td>
                                <td>${sesion.cantEjercicios}</td>
                                <td>${ejerciciosHTML}</td>
                                <td>${repeticionesHTML}</td>
                            `;
                            tableBody.appendChild(row);
                        });
                    } else {
                        tableBody.innerHTML = `
                            <tr>
                                <td colspan="8">
                                    <div class="alert alert-danger" role="alert">
                                        No se encontraron sesiones.
                                    </div>
                                </td>
                            </tr>
                        `;
                    }
                });
        }
    });
});

function adjustColumnWidths() {
    var table = document.getElementById("sesionesTable");
    var tbody = table.querySelector("tbody");
    var rows = tbody.querySelectorAll("tr");

    // Iterar sobre cada fila y calcular el ancho máximo para cada columna
    var maxWidths = Array.from(rows).reduce((acc, row) => {
        Array.from(row.cells).forEach((cell, index) => {
            acc[index] = Math.max(acc[index] || 0, cell.clientWidth);
        });
        return acc;
    }, []);

    // Aplicar los anchos máximos calculados a las celdas de la cabecera y el cuerpo
    var headerCells = table.querySelectorAll("thead th");
    Array.from(headerCells).forEach((cell, index) => {
        cell.style.width = `${maxWidths[index]}px`;
    });

    rows.forEach(row => {
        Array.from(row.cells).forEach((cell, index) => {
            cell.style.width = `${maxWidths[index]}px`;
        });
    });
}
</script>
